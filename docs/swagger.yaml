definitions:
  docs.CreateNoteResponse:
    properties:
      id:
        type: integer
    type: object
  docs.CreateNotebookResponse:
    properties:
      id:
        type: integer
    type: object
  docs.CreateSharedNoteResponse:
    properties:
      id:
        type: integer
    type: object
  docs.CreateSharedTodoListResponse:
    properties:
      id:
        type: integer
    type: object
  docs.CreateTodoItemResponse:
    properties:
      id:
        type: integer
    type: object
  docs.CreateTodoListResponse:
    properties:
      id:
        type: integer
    type: object
  docs.CreateUpdateNotebookDTO:
    properties:
      description:
        type: string
    type: object
  docs.GetAllNotebooksResponse:
    properties:
      count:
        type: integer
      notebooks:
        items:
          properties:
            description:
              type: string
            id:
              type: integer
          type: object
        type: array
    type: object
  docs.GetAllNotesResponse:
    properties:
      count:
        type: integer
      notes:
        items:
          properties:
            body:
              type: string
            created_at:
              type: string
            id:
              type: integer
            title:
              type: string
            updated_at:
              type: string
          type: object
        type: array
    type: object
  docs.GetAllTodoItemsResponse:
    properties:
      count:
        type: integer
      todo_items:
        items:
          properties:
            body:
              type: string
            done:
              type: boolean
            id:
              type: integer
          type: object
        type: array
    type: object
  docs.GetAllTodoListsResponse:
    properties:
      count:
        type: integer
      todo_lists:
        items:
          properties:
            created_at:
              type: string
            id:
              type: integer
            title:
              type: string
            updated_at:
              type: string
          type: object
        type: array
    type: object
  docs.GetNoteResponse:
    properties:
      body:
        type: string
      created_at:
        type: string
      id:
        type: integer
      title:
        type: string
      updated_at:
        type: string
    type: object
  docs.MessageResponse:
    properties:
      message:
        type: string
    type: object
  docs.OkStatusResponse:
    properties:
      status:
        example: ok
        type: string
    type: object
  docs.RefreshResponse:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
  docs.RefreshSessionDTO:
    properties:
      refresh_token:
        type: string
    type: object
  docs.SignInResponse:
    properties:
      access_token:
        type: string
      id:
        type: integer
      name:
        type: string
      refresh_token:
        type: string
    type: object
  docs.SignUpResponse:
    properties:
      id:
        type: integer
    type: object
  domain.CreateNoteDTO:
    properties:
      body:
        type: string
      title:
        type: string
    type: object
  domain.CreateSharedNoteDTO:
    properties:
      login:
        type: string
      note_id:
        type: integer
    type: object
  domain.CreateSharedTodoListDTO:
    properties:
      login:
        type: string
      todo_list_id:
        type: integer
    type: object
  domain.CreateTodoItemDTO:
    properties:
      body:
        type: string
    type: object
  domain.CreateTodoListDTO:
    properties:
      title:
        type: string
    type: object
  domain.CreateUserDTO:
    properties:
      login:
        type: string
      name:
        type: string
      password:
        type: string
    type: object
  domain.GetOutgoingSharedNotesInfoResponse:
    properties:
      count:
        type: integer
      shared_notes:
        items:
          $ref: '#/definitions/domain.OutgoingSharedNoteInfo'
        type: array
    type: object
  domain.GetOutgoingSharedTodoListsInfoResponse:
    properties:
      count:
        type: integer
      shared_todo_lists:
        items:
          $ref: '#/definitions/domain.OutgoingSharedTodoListInfo'
        type: array
    type: object
  domain.GetSharedNotesInfoResponse:
    properties:
      count:
        type: integer
      shared_notes:
        items:
          $ref: '#/definitions/domain.SharedNoteInfo'
        type: array
    type: object
  domain.GetSharedTodoListsInfoResponse:
    properties:
      count:
        type: integer
      shared_todo_lists:
        items:
          $ref: '#/definitions/domain.SharedTodoListInfo'
        type: array
    type: object
  domain.GetUserDTO:
    properties:
      login:
        type: string
      password:
        type: string
    type: object
  domain.LogoutDTO:
    properties:
      refresh_token:
        type: string
    type: object
  domain.Note:
    properties:
      body:
        type: string
      created_at:
        type: string
      id:
        type: integer
      notebook_id:
        type: integer
      title:
        type: string
      updated_at:
        type: string
      user_id:
        type: integer
    type: object
  domain.OutgoingSharedNoteInfo:
    properties:
      accepted:
        type: boolean
      id:
        type: integer
      recipient_login:
        type: string
      recipient_name:
        type: string
    type: object
  domain.OutgoingSharedTodoListInfo:
    properties:
      accepted:
        type: boolean
      id:
        type: integer
      recipient_login:
        type: string
      recipient_name:
        type: string
    type: object
  domain.PatchNoteDTO:
    properties:
      body:
        type: string
      title:
        type: string
    type: object
  domain.PatchTodoItemDTO:
    properties:
      body:
        type: string
      done:
        type: boolean
    type: object
  domain.SearchResult:
    properties:
      notes:
        items:
          $ref: '#/definitions/domain.Note'
        type: array
      notes_count:
        type: integer
      shared_notes:
        items:
          $ref: '#/definitions/domain.SharedNoteInfo'
        type: array
      shared_notes_count:
        type: integer
      shared_todo_lists:
        items:
          $ref: '#/definitions/domain.SharedTodoListInfo'
        type: array
      shared_todo_lists_count:
        type: integer
      todo_lists:
        items:
          $ref: '#/definitions/domain.TodoList'
        type: array
      todo_lists_count:
        type: integer
    type: object
  domain.SharedNoteData:
    properties:
      body:
        type: string
      created_at:
        type: string
      updated_at:
        type: string
    type: object
  domain.SharedNoteInfo:
    properties:
      accepted:
        type: boolean
      id:
        type: integer
      owner_login:
        type: string
      owner_name:
        type: string
      title:
        type: string
    type: object
  domain.SharedTodoListData:
    properties:
      created_at:
        type: string
      items:
        items:
          $ref: '#/definitions/domain.TodoItem'
        type: array
      updated_at:
        type: string
    type: object
  domain.SharedTodoListInfo:
    properties:
      accepted:
        type: boolean
      id:
        type: integer
      owner_login:
        type: string
      owner_name:
        type: string
      title:
        type: string
    type: object
  domain.TodoItem:
    properties:
      body:
        type: string
      done:
        type: boolean
      id:
        type: integer
      todo_list_id:
        type: integer
    type: object
  domain.TodoList:
    properties:
      created_at:
        type: string
      id:
        type: integer
      notebook_id:
        type: integer
      title:
        type: string
      updated_at:
        type: string
      user_id:
        type: integer
    type: object
  domain.UpdateTodoListDTO:
    properties:
      title:
        type: string
    type: object
info:
  contact: {}
  title: Notes API
  version: "1.0"
paths:
  /auth/logout:
    post:
      consumes:
      - application/json
      parameters:
      - description: User refresh token
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/domain.LogoutDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK status
          schema:
            $ref: '#/definitions/docs.OkStatusResponse'
        "400":
          description: Error message
          schema:
            $ref: '#/definitions/docs.MessageResponse'
      security:
      - BearerToken: []
      summary: User logout
      tags:
      - Auth
  /auth/refresh:
    post:
      consumes:
      - application/json
      parameters:
      - description: User session
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/docs.RefreshSessionDTO'
      produces:
      - application/json
      responses:
        "200":
          description: New data for user authorization
          schema:
            $ref: '#/definitions/docs.RefreshResponse'
        "400":
          description: Error message
          schema:
            $ref: '#/definitions/docs.MessageResponse'
      summary: Refreshing a user session
      tags:
      - Auth
  /auth/sign-in:
    post:
      consumes:
      - application/json
      parameters:
      - description: User JSON
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/domain.GetUserDTO'
      produces:
      - application/json
      responses:
        "200":
          description: Data for user authorization
          schema:
            $ref: '#/definitions/docs.SignInResponse'
        "400":
          description: Error message
          schema:
            $ref: '#/definitions/docs.MessageResponse'
        "500":
          description: Server error message
          schema:
            $ref: '#/definitions/docs.MessageResponse'
      summary: User sign in
      tags:
      - Auth
  /auth/sign-up:
    post:
      consumes:
      - application/json
      parameters:
      - description: User JSON
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/domain.CreateUserDTO'
      produces:
      - application/json
      responses:
        "200":
          description: User ID
          schema:
            $ref: '#/definitions/docs.SignUpResponse'
        "400":
          description: Error message
          schema:
            $ref: '#/definitions/docs.MessageResponse'
      summary: User sign up
      tags:
      - Auth
  /notebooks:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: Notebooks
          schema:
            items:
              $ref: '#/definitions/docs.GetAllNotebooksResponse'
            type: array
        "400":
          description: Error message
          schema:
            $ref: '#/definitions/docs.MessageResponse'
      security:
      - BearerToken: []
      summary: Getting a list of user notebooks
      tags:
      - Notebook
    post:
      consumes:
      - application/json
      parameters:
      - description: Notebook data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/docs.CreateUpdateNotebookDTO'
      produces:
      - application/json
      responses:
        "200":
          description: Notebook ID
          schema:
            $ref: '#/definitions/docs.CreateNotebookResponse'
        "400":
          description: Error message
          schema:
            $ref: '#/definitions/docs.MessageResponse'
      security:
      - BearerToken: []
      summary: Creating notebook
      tags:
      - Notebook
  /notebooks/{notebook-id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Notebook ID
        in: path
        name: notebook-id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK status
          schema:
            $ref: '#/definitions/docs.OkStatusResponse'
        "400":
          description: Error message
          schema:
            $ref: '#/definitions/docs.MessageResponse'
      security:
      - BearerToken: []
      summary: Deleting user notebook
      tags:
      - Notebook
    put:
      consumes:
      - application/json
      parameters:
      - description: Notebook ID
        in: path
        name: notebook-id
        required: true
        type: integer
      - description: New notebook data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/docs.CreateUpdateNotebookDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK status
          schema:
            $ref: '#/definitions/docs.OkStatusResponse'
        "400":
          description: Error message
          schema:
            $ref: '#/definitions/docs.MessageResponse'
      security:
      - BearerToken: []
      summary: Updating user notebook
      tags:
      - Notebook
  /notebooks/{notebook-id}/notes:
    get:
      consumes:
      - application/json
      parameters:
      - description: Notebook ID
        in: path
        name: notebook-id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Notes
          schema:
            items:
              $ref: '#/definitions/docs.GetAllNotesResponse'
            type: array
        "400":
          description: Error message
          schema:
            $ref: '#/definitions/docs.MessageResponse'
      security:
      - BearerToken: []
      summary: Getting a list of user notes in a notebook
      tags:
      - Note
    post:
      consumes:
      - application/json
      parameters:
      - description: Notebook ID
        in: path
        name: notebook-id
        required: true
        type: integer
      - description: Note data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/domain.CreateNoteDTO'
      produces:
      - application/json
      responses:
        "200":
          description: Note ID
          schema:
            $ref: '#/definitions/docs.CreateNoteResponse'
        "400":
          description: Error message
          schema:
            $ref: '#/definitions/docs.MessageResponse'
      security:
      - BearerToken: []
      summary: Creating a note in a notebook
      tags:
      - Note
  /notebooks/{notebook-id}/notes/{note-id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Notebook ID
        in: path
        name: notebook-id
        required: true
        type: integer
      - description: Note ID
        in: path
        name: note-id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK status
          schema:
            $ref: '#/definitions/docs.OkStatusResponse'
        "400":
          description: Error message
          schema:
            $ref: '#/definitions/docs.MessageResponse'
      security:
      - BearerToken: []
      summary: Deleting a note from a notebook
      tags:
      - Note
    get:
      consumes:
      - application/json
      parameters:
      - description: Notebook ID
        in: path
        name: notebook-id
        required: true
        type: integer
      - description: Note ID
        in: path
        name: note-id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Notes
          schema:
            items:
              $ref: '#/definitions/docs.GetNoteResponse'
            type: array
        "400":
          description: Error message
          schema:
            $ref: '#/definitions/docs.MessageResponse'
      security:
      - BearerToken: []
      summary: Getting a note in a notebook
      tags:
      - Note
    patch:
      consumes:
      - application/json
      parameters:
      - description: Notebook ID
        in: path
        name: notebook-id
        required: true
        type: integer
      - description: Note ID
        in: path
        name: note-id
        required: true
        type: integer
      - description: New note data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/domain.PatchNoteDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK status
          schema:
            $ref: '#/definitions/docs.OkStatusResponse'
        "400":
          description: Error message
          schema:
            $ref: '#/definitions/docs.MessageResponse'
      security:
      - BearerToken: []
      summary: Updating a note in a notebook
      tags:
      - Note
  /notebooks/{notebook-id}/todo-lists:
    get:
      consumes:
      - application/json
      parameters:
      - description: Notebook ID
        in: path
        name: notebook-id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Todo lists
          schema:
            items:
              $ref: '#/definitions/docs.GetAllTodoListsResponse'
            type: array
        "400":
          description: Error message
          schema:
            $ref: '#/definitions/docs.MessageResponse'
      security:
      - BearerToken: []
      summary: Getting a list of user todo lists in a notebook
      tags:
      - Todo list
    post:
      consumes:
      - application/json
      parameters:
      - description: Notebook ID
        in: path
        name: notebook-id
        required: true
        type: integer
      - description: Todo list data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/domain.CreateTodoListDTO'
      produces:
      - application/json
      responses:
        "200":
          description: Todo list ID
          schema:
            $ref: '#/definitions/docs.CreateTodoListResponse'
        "400":
          description: Error message
          schema:
            $ref: '#/definitions/docs.MessageResponse'
      security:
      - BearerToken: []
      summary: Creating a todo list in a notebook
      tags:
      - Todo list
  /notebooks/{notebook-id}/todo-lists/{todo-list-id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Notebook ID
        in: path
        name: notebook-id
        required: true
        type: integer
      - description: Todo list ID
        in: path
        name: todo-list-id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK status
          schema:
            $ref: '#/definitions/docs.OkStatusResponse'
        "400":
          description: Error message
          schema:
            $ref: '#/definitions/docs.MessageResponse'
      security:
      - BearerToken: []
      summary: Deleting a todo list from a notebook
      tags:
      - Todo list
    put:
      consumes:
      - application/json
      parameters:
      - description: Notebook ID
        in: path
        name: notebook-id
        required: true
        type: integer
      - description: Todo list ID
        in: path
        name: todo-list-id
        required: true
        type: integer
      - description: New todo list data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/domain.UpdateTodoListDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK status
          schema:
            $ref: '#/definitions/docs.OkStatusResponse'
        "400":
          description: Error message
          schema:
            $ref: '#/definitions/docs.MessageResponse'
      security:
      - BearerToken: []
      summary: Updating a todo list in a notebook
      tags:
      - Todo list
  /notebooks/{notebook-id}/todo-lists/{todo-list-id}/items:
    get:
      consumes:
      - application/json
      parameters:
      - description: Notebook ID
        in: path
        name: notebook-id
        required: true
        type: integer
      - description: Todo list ID
        in: path
        name: todo-list-id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Todo items
          schema:
            items:
              $ref: '#/definitions/docs.GetAllTodoItemsResponse'
            type: array
        "400":
          description: Error message
          schema:
            $ref: '#/definitions/docs.MessageResponse'
      security:
      - BearerToken: []
      summary: Getting a list of items in todo list
      tags:
      - Todo item
    post:
      consumes:
      - application/json
      parameters:
      - description: Notebook ID
        in: path
        name: notebook-id
        required: true
        type: integer
      - description: Todo list ID
        in: path
        name: todo-list-id
        required: true
        type: integer
      - description: Item data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/domain.CreateTodoItemDTO'
      produces:
      - application/json
      responses:
        "200":
          description: Todo list ID
          schema:
            $ref: '#/definitions/docs.CreateTodoItemResponse'
        "400":
          description: Error message
          schema:
            $ref: '#/definitions/docs.MessageResponse'
      security:
      - BearerToken: []
      summary: Creating a todo item in todo list
      tags:
      - Todo item
  /notebooks/{notebook-id}/todo-lists/{todo-list-id}/items/{item-id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Notebook ID
        in: path
        name: notebook-id
        required: true
        type: integer
      - description: Todo list ID
        in: path
        name: todo-list-id
        required: true
        type: integer
      - description: Item ID
        in: path
        name: item-id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK status
          schema:
            $ref: '#/definitions/docs.OkStatusResponse'
        "400":
          description: Error message
          schema:
            $ref: '#/definitions/docs.MessageResponse'
      security:
      - BearerToken: []
      summary: Deleting an item from todo list
      tags:
      - Todo item
    patch:
      consumes:
      - application/json
      parameters:
      - description: Notebook ID
        in: path
        name: notebook-id
        required: true
        type: integer
      - description: Todo list ID
        in: path
        name: todo-list-id
        required: true
        type: integer
      - description: Item ID
        in: path
        name: item-id
        required: true
        type: integer
      - description: New todo item data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/domain.PatchTodoItemDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK status
          schema:
            $ref: '#/definitions/docs.OkStatusResponse'
        "400":
          description: Error message
          schema:
            $ref: '#/definitions/docs.MessageResponse'
      security:
      - BearerToken: []
      summary: Updating an item in todo list
      tags:
      - Todo item
  /search:
    get:
      consumes:
      - application/json
      parameters:
      - description: Search by title
        in: query
        name: title
        required: true
        type: string
      - description: Search by notes
        in: query
        name: notes
        type: boolean
      - description: Search by todo lists
        in: query
        name: todo-lists
        type: boolean
      - description: Search by shared notes
        in: query
        name: shared-notes
        type: boolean
      - description: Search by shared todo lists
        in: query
        name: shared-todo-lists
        type: boolean
      - description: Created from (timestamp)
        in: query
        name: created-from
        type: number
      - description: Created to (timestamp)
        in: query
        name: created-to
        type: number
      - description: Updated from (timestamp)
        in: query
        name: updated-from
        type: number
      - description: Updated to (timestamp)
        in: query
        name: updated-to
        type: number
      produces:
      - application/json
      responses:
        "200":
          description: Search result
          schema:
            items:
              $ref: '#/definitions/domain.SearchResult'
            type: array
        "400":
          description: Error message
          schema:
            $ref: '#/definitions/docs.MessageResponse'
      security:
      - BearerToken: []
      summary: Search in notes, todo lists, shared notes and shared todo lists
      tags:
      - Search
  /shared-notes:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: Shared notes
          schema:
            items:
              $ref: '#/definitions/domain.GetSharedNotesInfoResponse'
            type: array
        "400":
          description: Error message
          schema:
            $ref: '#/definitions/docs.MessageResponse'
      security:
      - BearerToken: []
      summary: Getting a list of shared notes
      tags:
      - Shared note
  /shared-notes/{shared-note-id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Shared note ID
        in: path
        name: shared-note-id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Data of shared note
          schema:
            $ref: '#/definitions/domain.SharedNoteData'
        "400":
          description: Error message
          schema:
            $ref: '#/definitions/docs.MessageResponse'
      security:
      - BearerToken: []
      summary: Getting a data of shared note
      tags:
      - Shared note
  /shared-notes/incoming:
    post:
      consumes:
      - application/json
      parameters:
      - description: Shared note data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/domain.CreateSharedNoteDTO'
      produces:
      - application/json
      responses:
        "200":
          description: Shared note ID
          schema:
            $ref: '#/definitions/docs.CreateSharedNoteResponse'
        "400":
          description: Error message
          schema:
            $ref: '#/definitions/docs.MessageResponse'
      security:
      - BearerToken: []
      summary: Creating a shared note
      tags:
      - Shared note
  /shared-notes/incoming/{shared-note-id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Shared note ID
        in: path
        name: shared-note-id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK status
          schema:
            $ref: '#/definitions/docs.OkStatusResponse'
        "400":
          description: Error message
          schema:
            $ref: '#/definitions/docs.MessageResponse'
      security:
      - BearerToken: []
      summary: Deleting a shared note
      tags:
      - Shared note
    post:
      consumes:
      - application/json
      parameters:
      - description: Shared note ID
        in: path
        name: shared-note-id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK status
          schema:
            $ref: '#/definitions/docs.OkStatusResponse'
        "400":
          description: Error message
          schema:
            $ref: '#/definitions/docs.MessageResponse'
      security:
      - BearerToken: []
      summary: Accepting a shared note
      tags:
      - Shared note
  /shared-notes/outgoing/{note-id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Note ID
        in: path
        name: note-id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Outgoing shared notes
          schema:
            items:
              $ref: '#/definitions/domain.GetOutgoingSharedNotesInfoResponse'
            type: array
        "400":
          description: Error message
          schema:
            $ref: '#/definitions/docs.MessageResponse'
      security:
      - BearerToken: []
      summary: Getting an outgoing shared notes
      tags:
      - Shared note
  /shared-todo-lists:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: Shared todo lists
          schema:
            items:
              $ref: '#/definitions/domain.GetSharedTodoListsInfoResponse'
            type: array
        "400":
          description: Error message
          schema:
            $ref: '#/definitions/docs.MessageResponse'
      security:
      - BearerToken: []
      summary: Getting a list of shared todo lists
      tags:
      - Shared todo list
  /shared-todo-lists/{shared-todo-list-id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Shared todo list ID
        in: path
        name: shared-todo-list-id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Data of shared todo list
          schema:
            $ref: '#/definitions/domain.SharedTodoListData'
        "400":
          description: Error message
          schema:
            $ref: '#/definitions/docs.MessageResponse'
      security:
      - BearerToken: []
      summary: Getting a data of shared todo list
      tags:
      - Shared todo list
  /shared-todo-lists/incoming:
    post:
      consumes:
      - application/json
      parameters:
      - description: Shared todo list data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/domain.CreateSharedTodoListDTO'
      produces:
      - application/json
      responses:
        "200":
          description: Shared todo list ID
          schema:
            $ref: '#/definitions/docs.CreateSharedTodoListResponse'
        "400":
          description: Error message
          schema:
            $ref: '#/definitions/docs.MessageResponse'
      security:
      - BearerToken: []
      summary: Creating a shared todo list
      tags:
      - Shared todo list
  /shared-todo-lists/incoming/{shared-todo-list-id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Shared todo list ID
        in: path
        name: shared-todo-list-id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK status
          schema:
            $ref: '#/definitions/docs.OkStatusResponse'
        "400":
          description: Error message
          schema:
            $ref: '#/definitions/docs.MessageResponse'
      security:
      - BearerToken: []
      summary: Deleting a shared todo list
      tags:
      - Shared todo list
    post:
      consumes:
      - application/json
      parameters:
      - description: Shared todo list ID
        in: path
        name: shared-todo-list-id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK status
          schema:
            $ref: '#/definitions/docs.OkStatusResponse'
        "400":
          description: Error message
          schema:
            $ref: '#/definitions/docs.MessageResponse'
      security:
      - BearerToken: []
      summary: Accepting a shared todo list
      tags:
      - Shared todo list
  /shared-todo-lists/outgoing/{todo-list-id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Shared todo list ID
        in: path
        name: list-id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Outgoing shared todo lists
          schema:
            items:
              $ref: '#/definitions/domain.GetOutgoingSharedTodoListsInfoResponse'
            type: array
        "400":
          description: Error message
          schema:
            $ref: '#/definitions/docs.MessageResponse'
      security:
      - BearerToken: []
      summary: Getting an outgoing shared todo lists
      tags:
      - Shared todo list
securityDefinitions:
  BearerToken:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
