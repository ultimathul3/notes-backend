definitions:
  docs.CreateNoteResponse:
    properties:
      id:
        type: integer
    type: object
  docs.CreateNotebookResponse:
    properties:
      id:
        type: integer
    type: object
  docs.CreateUpdateNotebookDTO:
    properties:
      description:
        type: string
    type: object
  docs.MessageResponse:
    properties:
      message:
        type: string
    type: object
  docs.OkStatusResponse:
    properties:
      status:
        example: ok
        type: string
    type: object
  docs.RefreshResponse:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
  docs.RefreshSessionDTO:
    properties:
      refresh_token:
        type: string
      user_id:
        type: integer
    type: object
  docs.SignInResponse:
    properties:
      access_token:
        type: string
      id:
        type: integer
      refresh_token:
        type: string
    type: object
  docs.SignUpResponse:
    properties:
      id:
        type: integer
    type: object
  domain.CreateUpdateNoteDTO:
    properties:
      body:
        type: string
      title:
        type: string
    type: object
  domain.CreateUserDTO:
    properties:
      login:
        type: string
      name:
        type: string
      password:
        type: string
    type: object
  domain.GetAllNotebooksResponse:
    properties:
      count:
        type: integer
      notebooks:
        items:
          $ref: '#/definitions/domain.Notebook'
        type: array
    type: object
  domain.GetAllNotesResponse:
    properties:
      count:
        type: integer
      notes:
        items:
          $ref: '#/definitions/domain.Note'
        type: array
    type: object
  domain.GetUserIDDTO:
    properties:
      login:
        type: string
      password:
        type: string
    type: object
  domain.Note:
    properties:
      body:
        type: string
      created_at:
        type: string
      id:
        type: integer
      notebook_id:
        type: integer
      title:
        type: string
      updated_at:
        type: string
      user_id:
        type: integer
    type: object
  domain.Notebook:
    properties:
      description:
        type: string
      id:
        type: integer
      user_id:
        type: integer
    type: object
info:
  contact: {}
  title: Notes API
  version: "1.0"
paths:
  /auth/refresh:
    post:
      consumes:
      - application/json
      parameters:
      - description: User session
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/docs.RefreshSessionDTO'
      produces:
      - application/json
      responses:
        "200":
          description: New data for user authorization
          schema:
            $ref: '#/definitions/docs.RefreshResponse'
        "400":
          description: Error message
          schema:
            $ref: '#/definitions/docs.MessageResponse'
      summary: Refreshing a user session
      tags:
      - Auth
  /auth/sign-in:
    post:
      consumes:
      - application/json
      parameters:
      - description: User JSON
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/domain.GetUserIDDTO'
      produces:
      - application/json
      responses:
        "200":
          description: Data for user authorization
          schema:
            $ref: '#/definitions/docs.SignInResponse'
        "400":
          description: Error message
          schema:
            $ref: '#/definitions/docs.MessageResponse'
        "500":
          description: Server error message
          schema:
            $ref: '#/definitions/docs.MessageResponse'
      summary: User sign in
      tags:
      - Auth
  /auth/sign-up:
    post:
      consumes:
      - application/json
      parameters:
      - description: User JSON
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/domain.CreateUserDTO'
      produces:
      - application/json
      responses:
        "200":
          description: User ID
          schema:
            $ref: '#/definitions/docs.SignUpResponse'
        "400":
          description: Error message
          schema:
            $ref: '#/definitions/docs.MessageResponse'
      summary: User sign up
      tags:
      - Auth
  /notebooks:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: Notebooks
          schema:
            items:
              $ref: '#/definitions/domain.GetAllNotebooksResponse'
            type: array
        "400":
          description: Error message
          schema:
            $ref: '#/definitions/docs.MessageResponse'
      security:
      - BearerToken: []
      summary: Getting a list of user notebooks
      tags:
      - Notebook
    post:
      consumes:
      - application/json
      parameters:
      - description: Notebook data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/docs.CreateUpdateNotebookDTO'
      produces:
      - application/json
      responses:
        "200":
          description: Notebook ID
          schema:
            $ref: '#/definitions/docs.CreateNotebookResponse'
        "400":
          description: Error message
          schema:
            $ref: '#/definitions/docs.MessageResponse'
      security:
      - BearerToken: []
      summary: Creating notebook
      tags:
      - Notebook
  /notebooks/{notebook_id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Notebook ID
        in: path
        name: notebook_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK status
          schema:
            $ref: '#/definitions/docs.OkStatusResponse'
        "400":
          description: Error message
          schema:
            $ref: '#/definitions/docs.MessageResponse'
      security:
      - BearerToken: []
      summary: Deleting user notebook
      tags:
      - Notebook
    put:
      consumes:
      - application/json
      parameters:
      - description: Notebook ID
        in: path
        name: notebook_id
        required: true
        type: integer
      - description: New notebook data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/docs.CreateUpdateNotebookDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK status
          schema:
            $ref: '#/definitions/docs.OkStatusResponse'
        "400":
          description: Error message
          schema:
            $ref: '#/definitions/docs.MessageResponse'
      security:
      - BearerToken: []
      summary: Updating user notebook
      tags:
      - Notebook
  /notebooks/{notebook_id}/notes:
    get:
      consumes:
      - application/json
      parameters:
      - description: Notebook ID
        in: path
        name: notebook_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Notebooks
          schema:
            items:
              $ref: '#/definitions/domain.GetAllNotesResponse'
            type: array
        "400":
          description: Error message
          schema:
            $ref: '#/definitions/docs.MessageResponse'
      security:
      - BearerToken: []
      summary: Getting a list of user notes in a notebook
      tags:
      - Note
    post:
      consumes:
      - application/json
      parameters:
      - description: Notebook ID
        in: path
        name: notebook_id
        required: true
        type: integer
      - description: Note data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/domain.CreateUpdateNoteDTO'
      produces:
      - application/json
      responses:
        "200":
          description: Note ID
          schema:
            $ref: '#/definitions/docs.CreateNoteResponse'
        "400":
          description: Error message
          schema:
            $ref: '#/definitions/docs.MessageResponse'
      security:
      - BearerToken: []
      summary: Creating a note in a notebook
      tags:
      - Note
  /notebooks/{notebook_id}/notes/{note_id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Notebook ID
        in: path
        name: notebook_id
        required: true
        type: integer
      - description: Note ID
        in: path
        name: note_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK status
          schema:
            $ref: '#/definitions/docs.OkStatusResponse'
        "400":
          description: Error message
          schema:
            $ref: '#/definitions/docs.MessageResponse'
      security:
      - BearerToken: []
      summary: Deleting a note from a notebook
      tags:
      - Note
    put:
      consumes:
      - application/json
      parameters:
      - description: Notebook ID
        in: path
        name: notebook_id
        required: true
        type: integer
      - description: Note ID
        in: path
        name: note_id
        required: true
        type: integer
      - description: New note data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/domain.CreateUpdateNoteDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK status
          schema:
            $ref: '#/definitions/docs.OkStatusResponse'
        "400":
          description: Error message
          schema:
            $ref: '#/definitions/docs.MessageResponse'
      security:
      - BearerToken: []
      summary: Updating a note in a notebook
      tags:
      - Note
securityDefinitions:
  BearerToken:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
