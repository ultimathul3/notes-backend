version: "3.9"

services:
  nginx:
    image: nginx:1.25.0-alpine
    ports:
      - 80:80
      - 443:443
    networks:
      - notes-network
    restart: always
    volumes:
      - ./nginx/conf/:/etc/nginx/conf.d/
      - ./certbot/www:/var/www/certbot/
      - ./certbot/conf/:/etc/nginx/ssl/

  certbot:
    image: certbot/certbot:latest
    command: 
      ["certonly", "--webroot", "--webroot-path", "/var/www/certbot/", "--email" , "ultimathul3@ya.ru", "--agree-tos", "--no-eff-email", "-d", "ultimathul3.ru"]
    depends_on:
      - nginx
    volumes:
      - ./certbot/www/:/var/www/certbot/
      - ./certbot/conf/:/etc/letsencrypt/

  db:
    image: postgres
    container_name: notes_postgres
    ports:
      - ${PSQL_PORT}:5432
    networks:
      - notes-network
    volumes:
      - ./pg_data:/var/lib/postgresql/data/pgdata
    depends_on:
      - nginx
    environment:
      POSTGRES_USER: ${PSQL_USERNAME}
      POSTGRES_PASSWORD: ${PSQL_PASSWORD}
      POSTGRES_DB: ${PSQL_DB}
      PGDATA: /var/lib/postgresql/data/pgdata
    restart: always

  migrate:
    image: migrate/migrate
    container_name: notes_migrate
    networks:
      - notes-network
    depends_on:
      - db
    volumes:
      - ./migrations:/migrations
    command:
      ["-path", "/migrations", "-database", "postgres://${PSQL_USERNAME}:${PSQL_PASSWORD}@notes_postgres:${PSQL_PORT}/${PSQL_DB}?sslmode=disable", "up"]
    restart: on-failure

  app:
    container_name: notes_backend
    build: .
    ports:
      - ${HTTP_PORT}:8080
    networks:
      - notes-network
    depends_on:
      migrate:
        condition: service_completed_successfully
    restart: always

networks:
  notes-network:
    name: notes-network
    driver: bridge
